# make use of vm's
sudo: 'required'

# xenial is pretty old, but not as bad as trusty...
dist: xenial

# have the docker service set up (we'll
# update it later)
services:
  - docker

# adding additional apt packages
addons:
  apt:
    packages:
      - qemu-user-static
      # from the original main.sh
      - realpath
      - build-essential
      - python
      - python-pip
      - python-dev
      - openssl
      - libssl-dev
      - libevent-dev
      - git

env:
  - DOCKER_CLI_EXPERIMENTAL=enabled

jobs:
  include:
    ## a stage to take build a new base image with python dependencies included (this is slow on some architectures)
    - stage: preinstall
      name: prebuild amd64
      before_install:
        - './.travis/main.sh'
        - './.travis/setup_emulation.sh'
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - .travis/bootstrap_image.sh -u amd64 -r python -t 2.7-buster -a amd64 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p build
        - .travis/bootstrap_image.sh -u amd64 -r python -t 2.7-buster -a amd64 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p push
    - stage: preinstall
      name: prebuild arm32v7
      before_install:
        - './.travis/main.sh'
        - './.travis/setup_emulation.sh'
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - .travis/bootstrap_image.sh -u arm32v7 -r python -t 2.7-buster -a arm7 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p build
        - .travis/bootstrap_image.sh -u arm32v7 -r python -t 2.7-buster -a arm7 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p push
    #- stage: preinstall
    #  name: prebuild arm64v8
    #  before_install:
    #    - './.travis/main.sh'
    #    - './.travis/setup_emulation.sh'
    #  script:
    #    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    #    - .travis/bootstrap_image.sh -u arm64v8 -r python -t 2.7-buster -a arm8 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p build
    #    - .travis/bootstrap_image.sh -u arm64v8 -r python -t 2.7-buster -a arm8 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p push

    ## actually install our software on top of the above
    - stage: install
      name: build amd64
      # prepare the machine before any code
      # installation scripts
      before_install:
        - './.travis/main.sh'
        - './.travis/setup_emulation.sh'

      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        # build/push an intermediate container
        - .travis/bootstrap_image.sh -u amd64 -r python -t 2.7-buster -a amd64 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p build
        - .travis/bootstrap_image.sh -u amd64 -r python -t 2.7-buster -a amd64 -d Dockerfile.deps -i volttron/volttron-docker:deps-`echo ${TRAVIS_BRANCH} | tr / _` -p push
        # build the image itself
        - .travis/bootstrap_image.sh -u amd64 -r python -t 2.7-buster -a amd64 -d Dockerfile.postdeps -i volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _` -p build

      # only execute the following instructions in
      # the case of a success (failing at this point
      # won't mark the build as a failure).
      # To have `DOCKER_USERNAME` and `DOCKER_PASSWORD`
      # filled you need to either use `travis`' cli 
      # and then `travis set ..` or go to the travis
      # page of your repository and then change the 
      # environment in the settings pannel.
      #after_success:
        #- if [[ "$TRAVIS_BRANCH" == "master" ]]; then
        #    docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD ;
        #    ./.travis/build-docker.sh -p ;
        #  fi
        - .travis/bootstrap_image.sh -u amd64 -r python -t 2.7-buster -a amd64 -d Dockerfile.postdeps -i volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _` -p push
    - stage: install
      name: build arm32v7
      before_install:
        - './.travis/main.sh'
        - './.travis/setup_emulation.sh'
      script:
        - .travis/bootstrap_image.sh -u volttron -r volttron-docker -t deps-`echo ${TRAVIS_BRANCH} | tr / _`-arm -a arm7 -i volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _` -p build
      after_success:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - .travis/bootstrap_image.sh -u arm32v7 -r debian -t 10 -a arm7 -i volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _` -p push
    #- stage: install
    #  name: build arm64v8
    #  before_install:
    #    - './.travis/main.sh'
    #    - './.travis/setup_emulation.sh'
    #  script:
    #    - .travis/bootstrap_image.sh -u volttron -r volttron-docker -t deps-`echo ${TRAVIS_BRANCH} | tr / _`-arm -a arm8 -i volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _` -p build
    #  after_success:
    #    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    #    - .travis/bootstrap_image.sh -u arm64v8 -r debian -t 10 -a arm8 -i volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _` -p push

    ## assemble a manifest from the above
    - stage: manifest
      before_install:
        - './.travis/main.sh'
        #- './.travis/setup_emulation.sh'
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        #- .travis/build_manifest.sh -a arm -a arm8 -a amd64 -n volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _`
        - .travis/build_manifest.sh -a arm -a amd64 -n volttron/volttron-docker:`echo ${TRAVIS_BRANCH} | tr / _`
